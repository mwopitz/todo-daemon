# Configuration for golangci-lint v2.1.6
# See https://golangci-lint.run/usage/configuration/

version: "2"

# Formatter configuration
# See https://golangci-lint.run/usage/configuration/#formatters-configuration
formatters:
  # Enable specific formatters.
  # Default: [] (uses standard Go formatting)
  enable:
    - gofumpt # Checks if code and import statements are formatted, with additional rules.
    - goimports # Checks if the code and import statements are formatted according to the 'goimports' command.
    - golines # Checks if code is formatted, and fixes long lines.

  # Formatter settings
  settings:
    gofumpt:
      # Choose whether to use the extra rules.
      # Default: false
      extra-rules: true

    goimports:
      # A list of prefixes, which, if set, checks import paths
      # with the given prefixes are grouped after 3rd-party packages.
      # Default: []
      local-prefixes:
        - github.com/mwopitz/todo-daemon

    golines:
      # Target maximum line length.
      # Default: 100
      max-len: 120

# Linter configuration
# See https://golangci-lint.run/usage/configuration/#linters-configuration
linters:
  enable:
    - errcheck # checking for unchecked errors, these unchecked errors can be critical bugs in some cases
    - errname # checks that sentinel errors are prefixed with the Err and error types are suffixed with the Error
    - gocritic # provides diagnostics that check for bugs, performance and style issues
    - gosec # inspects source code for security problems
    - govet # reports suspicious constructs, such as Printf calls whose arguments do not align with the format string
    - ineffassign # detects when assignments to existing variables are not used
    - revive # fast, configurable, extensible, flexible, and beautiful linter for Go, drop-in replacement of golint
    - staticcheck # is a go vet on steroids, applying a ton of static analysis checks
    - unused # checks for unused constants, variables, functions and types

  settings:
    gocritic:
      # Enable multiple checks by tags in addition to default checks.
      # Run `GL_DEBUG=gocritic golangci-lint run --enable=gocritic` to see all tags and checks.
      # See https://github.com/go-critic/go-critic#usage -> section "Tags".
      # Default: []
      enabled-tags:
        - diagnostic
        - style
        - performance
        - opinionated
      disabled-tags:
        - experimental

    revive:
      # Enable all available rules.
      # Default: false
      enable-all-rules: true
      rules:
        # https://github.com/mgechev/revive/blob/HEAD/RULES_DESCRIPTIONS.md#add-constant
        - name: add-constant
          disabled: true # too noisy
        # https://github.com/mgechev/revive/blob/HEAD/RULES_DESCRIPTIONS.md#cognitive-complexity
        - name: cognitive-complexity
          arguments: [15]
        # https://github.com/mgechev/revive/blob/HEAD/RULES_DESCRIPTIONS.md#cyclomatic
        - name: cyclomatic
          arguments: [10]
        # https://github.com/mgechev/revive/blob/HEAD/RULES_DESCRIPTIONS.md#enforce-repeated-arg-type-style
        - name: enforce-repeated-arg-type-style
          arguments: [short]
        # https://github.com/mgechev/revive/blob/HEAD/RULES_DESCRIPTIONS.md#enforce-map-style
        - name: enforce-map-style
          arguments: [make]
        # https://github.com/mgechev/revive/blob/HEAD/RULES_DESCRIPTIONS.md#enforce-slice-style
        - name: enforce-slice-style
          arguments: [make]
        - name: function-length
          disabled: true # long functions aren't necessarily complex
        # https://github.com/mgechev/revive/blob/HEAD/RULES_DESCRIPTIONS.md#line-length-limit
        - name: line-length-limit
          disabled: true # handled by golines formatter
        # https://github.com/mgechev/revive/blob/HEAD/RULES_DESCRIPTIONS.md#range-val-address
        - name: range-val-address
          disabled: true # irrelevant for Go 1.22+
        # https://github.com/mgechev/revive/blob/HEAD/RULES_DESCRIPTIONS.md#range-val-in-closure
        - name: range-val-in-closure
          disabled: true # irrelevant for Go 1.22+
