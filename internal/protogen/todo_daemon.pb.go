// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.31.1
// source: todo_daemon.proto

package protogen

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Options for querying the status of the To-do Daemon.
type GetStatusRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetStatusRequest) Reset() {
	*x = GetStatusRequest{}
	mi := &file_todo_daemon_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStatusRequest) ProtoMessage() {}

func (x *GetStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_todo_daemon_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStatusRequest.ProtoReflect.Descriptor instead.
func (*GetStatusRequest) Descriptor() ([]byte, []int) {
	return file_todo_daemon_proto_rawDescGZIP(), []int{0}
}

// The status of the To-do Daemon.
type Status struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Process       *ProcessStatus         `protobuf:"bytes,1,opt,name=process,proto3" json:"process,omitempty"`
	Server        *ServerStatus          `protobuf:"bytes,2,opt,name=server,proto3" json:"server,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Status) Reset() {
	*x = Status{}
	mi := &file_todo_daemon_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Status) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Status) ProtoMessage() {}

func (x *Status) ProtoReflect() protoreflect.Message {
	mi := &file_todo_daemon_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Status.ProtoReflect.Descriptor instead.
func (*Status) Descriptor() ([]byte, []int) {
	return file_todo_daemon_proto_rawDescGZIP(), []int{1}
}

func (x *Status) GetProcess() *ProcessStatus {
	if x != nil {
		return x.Process
	}
	return nil
}

func (x *Status) GetServer() *ServerStatus {
	if x != nil {
		return x.Server
	}
	return nil
}

// The status of the To-do Daemon process.
type ProcessStatus struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Pid           uint32                 `protobuf:"varint,1,opt,name=pid,proto3" json:"pid,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProcessStatus) Reset() {
	*x = ProcessStatus{}
	mi := &file_todo_daemon_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProcessStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcessStatus) ProtoMessage() {}

func (x *ProcessStatus) ProtoReflect() protoreflect.Message {
	mi := &file_todo_daemon_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcessStatus.ProtoReflect.Descriptor instead.
func (*ProcessStatus) Descriptor() ([]byte, []int) {
	return file_todo_daemon_proto_rawDescGZIP(), []int{2}
}

func (x *ProcessStatus) GetPid() uint32 {
	if x != nil {
		return x.Pid
	}
	return 0
}

// The status of the To-do Daemon server.
type ServerStatus struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ApiBaseUrl    string                 `protobuf:"bytes,1,opt,name=api_base_url,json=apiBaseUrl,proto3" json:"api_base_url,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ServerStatus) Reset() {
	*x = ServerStatus{}
	mi := &file_todo_daemon_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ServerStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerStatus) ProtoMessage() {}

func (x *ServerStatus) ProtoReflect() protoreflect.Message {
	mi := &file_todo_daemon_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerStatus.ProtoReflect.Descriptor instead.
func (*ServerStatus) Descriptor() ([]byte, []int) {
	return file_todo_daemon_proto_rawDescGZIP(), []int{3}
}

func (x *ServerStatus) GetApiBaseUrl() string {
	if x != nil {
		return x.ApiBaseUrl
	}
	return ""
}

var File_todo_daemon_proto protoreflect.FileDescriptor

const file_todo_daemon_proto_rawDesc = "" +
	"\n" +
	"\x11todo_daemon.proto\x12\x0fmwopitz.todo.v1\"\x12\n" +
	"\x10GetStatusRequest\"y\n" +
	"\x06Status\x128\n" +
	"\aprocess\x18\x01 \x01(\v2\x1e.mwopitz.todo.v1.ProcessStatusR\aprocess\x125\n" +
	"\x06server\x18\x02 \x01(\v2\x1d.mwopitz.todo.v1.ServerStatusR\x06server\"!\n" +
	"\rProcessStatus\x12\x10\n" +
	"\x03pid\x18\x01 \x01(\rR\x03pid\"0\n" +
	"\fServerStatus\x12 \n" +
	"\fapi_base_url\x18\x01 \x01(\tR\n" +
	"apiBaseUrl2W\n" +
	"\n" +
	"TodoDaemon\x12I\n" +
	"\tGetStatus\x12!.mwopitz.todo.v1.GetStatusRequest\x1a\x17.mwopitz.todo.v1.Status\"\x00B2Z0github.com/mwopitz/todo-daemon/internal/protogenb\x06proto3"

var (
	file_todo_daemon_proto_rawDescOnce sync.Once
	file_todo_daemon_proto_rawDescData []byte
)

func file_todo_daemon_proto_rawDescGZIP() []byte {
	file_todo_daemon_proto_rawDescOnce.Do(func() {
		file_todo_daemon_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_todo_daemon_proto_rawDesc), len(file_todo_daemon_proto_rawDesc)))
	})
	return file_todo_daemon_proto_rawDescData
}

var file_todo_daemon_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_todo_daemon_proto_goTypes = []any{
	(*GetStatusRequest)(nil), // 0: mwopitz.todo.v1.GetStatusRequest
	(*Status)(nil),           // 1: mwopitz.todo.v1.Status
	(*ProcessStatus)(nil),    // 2: mwopitz.todo.v1.ProcessStatus
	(*ServerStatus)(nil),     // 3: mwopitz.todo.v1.ServerStatus
}
var file_todo_daemon_proto_depIdxs = []int32{
	2, // 0: mwopitz.todo.v1.Status.process:type_name -> mwopitz.todo.v1.ProcessStatus
	3, // 1: mwopitz.todo.v1.Status.server:type_name -> mwopitz.todo.v1.ServerStatus
	0, // 2: mwopitz.todo.v1.TodoDaemon.GetStatus:input_type -> mwopitz.todo.v1.GetStatusRequest
	1, // 3: mwopitz.todo.v1.TodoDaemon.GetStatus:output_type -> mwopitz.todo.v1.Status
	3, // [3:4] is the sub-list for method output_type
	2, // [2:3] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_todo_daemon_proto_init() }
func file_todo_daemon_proto_init() {
	if File_todo_daemon_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_todo_daemon_proto_rawDesc), len(file_todo_daemon_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_todo_daemon_proto_goTypes,
		DependencyIndexes: file_todo_daemon_proto_depIdxs,
		MessageInfos:      file_todo_daemon_proto_msgTypes,
	}.Build()
	File_todo_daemon_proto = out.File
	file_todo_daemon_proto_goTypes = nil
	file_todo_daemon_proto_depIdxs = nil
}
